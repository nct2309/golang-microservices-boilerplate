syntax = "proto3";

package gateway;

option go_package = "golang-microservices-boilerplate/proto/api-gateway";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Import all service protos
import "proto/user-service/user.proto";
// Add more service imports here as needed:
// import "proto/other-service/other.proto";

// Gateway-wide options for OpenAPI generation
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Microservices API";
    version: "1.0";
    description: "API Gateway for Microservices";
  };
  schemes: HTTPS;
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  
  // Add Bearer token authentication
  security_definitions: {
    security: {
      key: "BearerAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "Authentication token, prefixed by Bearer: Bearer <token>";
      }
    }
  }
  
  // Default responses for all endpoints
  responses: {
    key: "401";
    value: {
      description: "Unauthorized - Authentication required";
    }
  }
  responses: {
    key: "403";
    value: {
      description: "Forbidden - Insufficient permissions";
    }
  }
  responses: {
    key: "500";
    value: {
      description: "Internal Server Error";
    }
  }
}; 